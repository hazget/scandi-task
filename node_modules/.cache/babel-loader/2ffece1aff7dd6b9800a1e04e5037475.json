{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./features/cart/cartSlice\";\nimport setProductReducer from \"./features/set_product/setProductSlice\";\nimport currencyReducer from \"./features/currency/currencySlice\";\nimport minicartBackdropReducer from \"./features/backdrops/minicartBackdrop\";\nimport currenciesBackdropReducer from \"./features/backdrops/currenciesBackdrop\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nconst rootReducer = combineReducers({\n  cart: cartReducer,\n  setProduct: setProductReducer,\n  currency: currencyReducer,\n  minicartBackdrop: minicartBackdropReducer,\n  currenciesBackdrop: currenciesBackdropReducer\n});\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);\nexport default store;","map":{"version":3,"names":["configureStore","combineReducers","cartReducer","setProductReducer","currencyReducer","minicartBackdropReducer","currenciesBackdropReducer","storage","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","rootReducer","cart","setProduct","currency","minicartBackdrop","currenciesBackdrop","persistConfig","key","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["D:/projects/scandi-task/client/src/store.js"],"sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport cartReducer from \"./features/cart/cartSlice\";\r\nimport setProductReducer from \"./features/set_product/setProductSlice\";\r\nimport currencyReducer from \"./features/currency/currencySlice\";\r\nimport minicartBackdropReducer from \"./features/backdrops/minicartBackdrop\";\r\nimport currenciesBackdropReducer from \"./features/backdrops/currenciesBackdrop\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nconst rootReducer = combineReducers({\r\n  cart: cartReducer,\r\n  setProduct: setProductReducer,\r\n  currency: currencyReducer,\r\n  minicartBackdrop: minicartBackdropReducer,\r\n  currenciesBackdrop: currenciesBackdropReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport let persistor = persistStore(store);\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,uBAAP,MAAoC,uCAApC;AACA,OAAOC,yBAAP,MAAsC,yCAAtC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAWA,MAAMC,WAAW,GAAGf,eAAe,CAAC;EAClCgB,IAAI,EAAEf,WAD4B;EAElCgB,UAAU,EAAEf,iBAFsB;EAGlCgB,QAAQ,EAAEf,eAHwB;EAIlCgB,gBAAgB,EAAEf,uBAJgB;EAKlCgB,kBAAkB,EAAEf;AALc,CAAD,CAAnC;AAQA,MAAMgB,aAAa,GAAG;EACpBC,GAAG,EAAE,MADe;EAEpBhB;AAFoB,CAAtB;AAKA,MAAMiB,gBAAgB,GAAGf,cAAc,CAACa,aAAD,EAAgBN,WAAhB,CAAvC;AAEA,MAAMS,KAAK,GAAGzB,cAAc,CAAC;EAC3B0B,OAAO,EAAEF,gBADkB;EAE3BG,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACpB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;IADC;EADA,CAAD;AAHK,CAAD,CAA5B;AAUA,OAAO,IAAIgB,SAAS,GAAGvB,YAAY,CAACiB,KAAD,CAA5B;AACP,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}