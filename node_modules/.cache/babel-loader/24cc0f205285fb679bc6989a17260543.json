{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartItems: [],\n  amount: 0,\n  total: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    newCartItem: (state, action) => {\n      let isInCart = false;\n      let existingItem = {};\n      state.cartItems.forEach(item => {\n        if (JSON.stringify(item.id) === JSON.stringify(action.payload.product.id) && JSON.stringify(item.attributes) === JSON.stringify(action.payload.product.attributes)) {\n          isInCart = true;\n          existingItem = item;\n        }\n      });\n\n      if (!isInCart) {\n        state.cartItems.push(action.payload.product);\n      } else {\n        existingItem.amount += 1;\n      }\n    },\n    removeItem: (state, action) => {\n      state.cartItems.forEach(item => {\n        if (JSON.stringify(item) === JSON.stringify(action.payload)) {\n          state.cartItems = state.cartItems.filter(pr => pr !== item);\n        }\n      });\n    },\n    calculateTotals: (state, action) => {\n      const curr = action.payload;\n      let amount = 0;\n      let total = 0;\n      state.cartItems.forEach(item => {\n        amount += item.amount;\n        total += item.amount * item.prices.find(price => price.currency.label === curr.label).amount;\n      });\n      state.amount = amount;\n      state.total = total;\n    },\n    increase: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.cartItems.forEach(item => {\n        if (JSON.stringify(item) === JSON.stringify(payload)) {\n          item.amount += 1;\n        }\n      });\n    },\n    decrease: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.cartItems.forEach(item => {\n        if (JSON.stringify(item) === JSON.stringify(payload)) {\n          item.amount -= 1;\n        }\n      });\n    }\n  }\n});\nexport const {\n  newCartItem,\n  calculateTotals,\n  increase,\n  decrease,\n  removeItem\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","amount","total","cartSlice","name","reducers","newCartItem","state","action","isInCart","existingItem","forEach","item","JSON","stringify","id","payload","product","attributes","push","removeItem","filter","pr","calculateTotals","curr","prices","find","price","currency","label","increase","decrease","actions","reducer"],"sources":["D:/projects/scandi-task/client/src/features/cart/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  cartItems: [],\r\n  amount: 0,\r\n  total: 0,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    newCartItem: (state, action) => {\r\n      let isInCart = false;\r\n      let existingItem = {};\r\n      state.cartItems.forEach((item) => {\r\n        if (\r\n          JSON.stringify(item.id) ===\r\n            JSON.stringify(action.payload.product.id) &&\r\n          JSON.stringify(item.attributes) ===\r\n            JSON.stringify(action.payload.product.attributes)\r\n        ) {\r\n          isInCart = true;\r\n          existingItem = item;\r\n        }\r\n      });\r\n      if (!isInCart) {\r\n        state.cartItems.push(action.payload.product);\r\n      } else {\r\n        existingItem.amount += 1;\r\n      }\r\n    },\r\n    removeItem: (state, action) => {\r\n      state.cartItems.forEach((item) => {\r\n        if (JSON.stringify(item) === JSON.stringify(action.payload)) {\r\n          state.cartItems = state.cartItems.filter((pr) => pr !== item);\r\n        }\r\n      });\r\n    },\r\n    calculateTotals: (state, action) => {\r\n      const curr = action.payload;\r\n      let amount = 0;\r\n      let total = 0;\r\n      state.cartItems.forEach((item) => {\r\n        amount += item.amount;\r\n        total +=\r\n          item.amount *\r\n          item.prices.find((price) => price.currency.label === curr.label)\r\n            .amount;\r\n      });\r\n      state.amount = amount;\r\n      state.total = total;\r\n    },\r\n    increase: (state, { payload }) => {\r\n      state.cartItems.forEach((item) => {\r\n        if (JSON.stringify(item) === JSON.stringify(payload)) {\r\n          item.amount += 1;\r\n        }\r\n      });\r\n    },\r\n    decrease: (state, { payload }) => {\r\n      state.cartItems.forEach((item) => {\r\n        if (JSON.stringify(item) === JSON.stringify(payload)) {\r\n          item.amount -= 1;\r\n        }\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  newCartItem,\r\n  calculateTotals,\r\n  increase,\r\n  decrease,\r\n  removeItem,\r\n} = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}